import GeneratorWidget from './generator-widget';export default class Popup {  constructor(cityId, cityName) {    this.cityId = cityId;    this.cityName = cityName;    this.generateWidget = new GeneratorWidget();    this.generateWidget.defaultAppIdProps = '2d90837ddbaeda36ab487f257829b667';    this.form = document.getElementById('frm-landing-widget');    this.popup = document.getElementById('popup');    this.popupShadow = document.querySelector('.popup-shadow');    this.popupClose = document.getElementById('popup-close');    this.contentJSGeneration = document.getElementById('js-code-generate');    this.copyContentJSCode = document.getElementById('copy-js-code');    this.apiKey = document.getElementById('api-key');    this.popupShow = this.popupShow.bind(this);    this.eventPopupClose = this.eventPopupClose.bind(this);    this.eventCopyContentJSCode = this.eventCopyContentJSCode.bind(this);    // Фиксируем клики на форме, и открываем popup окно при нажатии на кнопку    this.form.addEventListener('click', this.popupShow);    // Закрываем окно при нажатии на крестик    document.addEventListener('click', this.eventPopupClose);    // Копирование в буфер обмена JS кода    this.copyContentJSCode.addEventListener('click', this.eventCopyContentJSCode);  }  /**   * [cityIdProps description]   * @return {[type]} [description]   */  get cityIdProps() {    return cityId;  }  /**   * [cityIdProps description]   * @param  {[type]} cityId [description]   * @return {[type]}        [description]   */  set cityIdProps(cityId) {    this.cityId = cityId;  }  /**   * [cityNameProps description]   * @return {[type]} [description]   */  get cityNameProps() {    return this.cityName;  }  /**   * [cityNameProps description]   * @param  {[type]} cityName [description]   * @return {[type]}          [description]   */  set cityNameProps(cityName) {    this.cityName = cityName;  }  /**   * [popupShow метод открытия попап окна]   * @param  {[type]} event [description]   * @return {[type]}       [description]   */  popupShow(event) {        let element = event.target;        if(element.id && element.classList.contains('container-custom-card__btn')) {                        event.preventDefault();            this.generateWidget.setInitialStateForm(this.cityId, this.cityName);            this.contentJSGeneration.value = this.generateWidget.getCodeForGenerateWidget(this.generateWidget.mapWidgets(element.id)['id']);            if(!this.popup.classList.contains('popup--visible')) {                document.body.style.overflow = 'hidden';                this.popup.classList.add('popup--visible');                this.popupShadow.classList.add('popup-shadow--visible')                switch(this.generateWidget.mapWidgets(event.target.id)['schema']) {                    case 'blue':                        if(!this.popup.classList.contains('popup--blue')) {                            this.popup.classList.add('popup--blue');                        }                        if(this.popup.classList.contains('popup--brown')) {                            this.popup.classList.remove('popup--brown');                        }                        break;                    case 'brown':                        if(!this.popup.classList.contains('popup--brown')) {                            this.popup.classList.add('popup--brown');                        }                        if(this.popup.classList.contains('popup--blue')) {                            this.popup.classList.remove('popup--blue');                        }                        break;                    case 'none':                        if(this.popup.classList.contains('popup--brown')) {                            this.popup.classList.remove('popup--brown');                        }                        if(this.popup.classList.contains('popup--blue')) {                            this.popup.classList.remove('popup--blue');                        }                    }                }        }  }  eventPopupClose(event){      var element = event.target;      if((!element.classList.contains('popupClose') || element === popup)        && !element.classList.contains('container-custom-card__btn')        && !element.classList.contains('popup__title')        && !element.classList.contains('popup__items')        && !element.classList.contains('popup__layout')        && !element.classList.contains('popup__btn')) {        this.popup.classList.remove('popup--visible');        this.popupShadow.classList.remove('popup-shadow--visible');        document.body.style.overflow = 'auto';      }    }    eventCopyContentJSCode(event) {      event.preventDefault();      this.contentJSGeneration.select();      try{          const txtCopy = document.execCommand('copy');          var msg = txtCopy ? 'successful' : 'unsuccessful';          console.log('Copy email command was ' + msg);      }      catch(e){          console.log(`Ошибка копирования ${e.errLogToConsole}`);      }      // Снятие выделения - ВНИМАНИЕ: вы должны использовать      // removeRange(range) когда это возможно      window.getSelection().removeAllRanges();      popup.classList.remove('popup--visible');      popupShadow.classList.remove('popup-shadow--visible');      document.body.style.overflow = 'auto';    }}